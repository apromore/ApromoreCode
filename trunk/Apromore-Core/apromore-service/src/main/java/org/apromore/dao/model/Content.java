package org.apromore.dao.model;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.springframework.beans.factory.annotation.Configurable;

import javax.persistence.*;
import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Content generated by hbm2java
 */
@Entity
@Table(name = "content")
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
@Configurable("content")
public class Content implements Serializable {

    /**
     * Hard coded for interoperability.
     */
    private static final long serialVersionUID = -9078623404638485548L;

    private Integer id;
    private String boundaryS;
    private String boundaryE;
    private String code;

    private Set<FragmentVersion> fragmentVersions = new HashSet<FragmentVersion>(0);
    private Set<Node> nodes = new HashSet<Node>(0);
    private Set<Edge> edges = new HashSet<Edge>(0);

    /**
     * Public Constructor.
     */
    public Content() { }


    /**
     * returns the Id of this Object.
     * @return the id
     */
    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    /**
     * Sets the Id of this Object
     * @param id the new Id.
     */
    public void setId(final Integer id) {
        this.id = id;
    }


    @Column(name = "boundary_s", length = 40)
    public String getBoundaryS() {
        return this.boundaryS;
    }

    public void setBoundaryS(final String newBoundaryS) {
        this.boundaryS = newBoundaryS;
    }


    @Column(name = "boundary_e", length = 40)
    public String getBoundaryE() {
        return this.boundaryE;
    }

    public void setBoundaryE(final String newBoundaryE) {
        this.boundaryE = newBoundaryE;
    }


    @Column(name = "code", length = 65535)
    public String getCode() {
        return this.code;
    }

    public void setCode(final String newContentHash) {
        this.code = newContentHash;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "content")
    public Set<FragmentVersion> getFragmentVersions() {
        return this.fragmentVersions;
    }

    public void setFragmentVersions(final Set<FragmentVersion> newFragmentVersions) {
        this.fragmentVersions = newFragmentVersions;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "content")
    public Set<Node> getNodes() {
        return this.nodes;
    }

    public void setNodes(final Set<Node> newNodes) {
        this.nodes = newNodes;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "content")
    public Set<Edge> getEdges() {
        return this.edges;
    }

    public void setEdges(final Set<Edge> newEdges) {
        this.edges = newEdges;
    }

}


