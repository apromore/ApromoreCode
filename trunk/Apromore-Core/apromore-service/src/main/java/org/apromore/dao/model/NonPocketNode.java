package org.apromore.dao.model;

import java.io.Serializable;
import javax.persistence.*;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.springframework.beans.factory.annotation.Configurable;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * NonPocketNode generated by hbm2java
 */
@Entity
@Table(name = "non_pocket_node")
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
@Configurable("nonPocketNode")
public class NonPocketNode implements Serializable {

    /**
     * Hard coded for interoperability.
     */
    private static final long serialVersionUID = -9072538657838485548L;

    private Integer id;
    private Node node;

    /**
     * Public Constructor.
     */
    public NonPocketNode() { }


    /**
     * returns the Id of this Object.
     * @return the id
     */
    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    /**
     * Sets the Id of this Object
     * @param id the new Id.
     */
    public void setId(final Integer id) {
        this.id = id;
    }


    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "nodeId")
    public Node getNode() {
        return this.node;
    }

    public void setNode(final Node newNode) {
        this.node = newNode;
    }

}


