<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings version="1.0" xmlns="http://java.sun.com/xml/ns/persistence/orm"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_1_0.xsd ">

    <named-query name="clusteringSummary.getClusteringSummary">
        <!-- Used ClusteringDao -->
        <query>SELECT new org.apromore.dao.model.ClusteringSummary(count(c.id), min(c.size), max(c.size),
            min(c.avgFragmentSize), max(c.avgFragmentSize), min(c.BCR), max(c.BCR))
            FROM Cluster c
        </query>
    </named-query>

    <named-query name="fragmentVersion.getUnprocessedFragments">
        <!-- Used ClusteringDao -->
        <query>SELECT f FROM FragmentVersion f</query>
    </named-query>

    <named-query name="cluster.getClusterById">
        <!-- Used ClusteringDaoJpa -->
        <query>SELECT c FROM Cluster c
            WHERE c.id = :clusterId</query>
    </named-query>

    <named-query name="cluster.getAllClusters">
        <!-- Used ClusteringDaoJpa -->
        <query>SELECT c FROM Cluster c</query>
    </named-query>

    <named-query name="fragmentDistance.getDistancesBelowThreshold">
        <!-- Used ClusteringDao -->
        <query>SELECT fd FROM FragmentDistance fd
            WHERE fd.distance &lt; :threshold
        </query>
    </named-query>

    <named-query name="fragmentDistance.getDistance">
        <!-- Used ClusteringDao -->
        <query>SELECT fd.distance FROM FragmentDistance fd
            WHERE fd.fragmentVersionId1.id = :fragmentId1
            AND fd.fragmentVersionId1.id = :fragmentId2
        </query>
    </named-query>

    <named-query name="clusterAssignment.getFragmentIdsOfCluster">
        <!-- Used ClusteringDao -->
        <query>SELECT ca.fragment.id FROM ClusterAssignment ca
            WHERE ca.cluster.id = :clusterId
        </query>
    </named-query>

    <named-query name="fragmentVersion.getFragmentsOfProcesses">
        <!-- Used ClusteringDao -->
        <query>SELECT f FROM FragmentVersion f, ProcessFragmentMap m, ProcessModelVersion pmv, ProcessBranch b, Process
            p
            WHERE f.id = m.fragmentVersion.id
            AND m.processModelVersion.id = pmv.id
            AND pmv.processBranch.id = b.id
            AND b.process.id = p.id
            AND p.id IN (:processIds)
        </query>
    </named-query>

    <named-query name="clusterAssignment.getFragmentsOfCluster">
        <!-- Used ClusteringDao -->
        <query>SELECT f FROM FragmentVersion f, ClusterAssignment ca
            WHERE ca.cluster.id = :clusterId
            AND ca.fragment.id = f.id
        </query>
    </named-query>

    <named-query name="clusterAssignment.getFragmentsOfCluster2">
        <!-- Used ClusteringDao -->
        <query>SELECT f FROM FragmentVersion f, ClusterAssignment ca, ProcessFragmentMap m, ProcessModelVersion pmv
            WHERE ca.cluster.id = :clusterId
            AND ca.fragment.id = f.id
            AND f.id = m.fragmentVersion.id
            AND m.processModelVersion.id = pmv.id
        </query>
    </named-query>

    <named-query name="cluster.getFilteredClusters">
        <!-- Used ClusteringDaoJpa -->
        <query>SELECT c FROM Cluster c
            WHERE (c.size &gt; :minClusterSize OR c.size = :minClusterSize)
            AND (c.size &lt; :maxClusterSize OR c.size = :maxClusterSize)
            AND (c.avgFragmentSize &gt; :minAvgFragmentSize OR c.avgFragmentSize = :minAvgFragmentSize)
            AND (c.avgFragmentSize &lt; :maxAvgFragmentSize OR c.avgFragmentSize = :maxAvgFragmentSize)
            AND (c.BCR &gt; :minBCR OR c.BCR = :minBCR)
            AND (c.BCR &lt; :maxBCR OR c.BCR = :maxBCR)
        </query>
    </named-query>

    <named-query name="cluster.deleteAllClusters">
        <!-- Used ClusteringDao -->
        <query>DELETE FROM Cluster c</query>
    </named-query>

    <named-query name="clusterAssignment.deleteAllClusterAssignments">
        <!-- Used ClusteringDao -->
        <query>DELETE FROM ClusterAssignment ca</query>
    </named-query>

</entity-mappings>