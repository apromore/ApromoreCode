
package org.test_toolbox.manager;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import org.test_toolbox.manager.model_manager.ParameterType;
import org.test_toolbox.manager.model_manager.ParametersType;
import org.test_toolbox.manager.model_manager.ProcessSummariesType;
import org.test_toolbox.manager.model_manager.ReadProcessSummariesInputMsgType;
import org.test_toolbox.manager.model_manager.ReadProcessSummariesOutputMsgType;
import org.test_toolbox.manager.model_manager.ResultType;
import org.test_toolbox.manager.model_manager.SearchForSimilarProcessesInputMsgType;
import org.test_toolbox.manager.model_manager.SearchForSimilarProcessesOutputMsgType;

/**
 * This class was generated by Apache CXF 2.4.1
 * 2011-07-21T09:03:57.235+10:00
 * Generated source version: 2.4.1
 * 
 */
public final class RequestToToolbox {

	public RequestToToolbox() {
		
	}

	public ProcessSummariesType readProcessSummaries(ManagerPortalPortType port) throws Exception {
		ReadProcessSummariesInputMsgType payload = new ReadProcessSummariesInputMsgType();
		payload.setSearchExpression("");
		ReadProcessSummariesOutputMsgType res = port.readProcessSummaries(payload);
		ResultType result = res.getResult();
		if (result.getCode() == -1) {
			throw new Exception (result.getMessage()); 
		} else {
			return res.getProcessSummaries();
		}
	}
	public ProcessSummariesType searchForSimilarProcesses(ManagerPortalPortType port,
			int processId, String versionName, 
			String method, 
			Boolean latestVersions,
			double modelthreshold, 
			double labelthreshold, 
			double contextthreshold, 
			double skipnweight, 
			double subnweight, 
			double skipeweight) throws Exception {

		SearchForSimilarProcessesInputMsgType payload = new SearchForSimilarProcessesInputMsgType();
		payload.setAlgorithm(method);
		payload.setProcessId(processId);
		payload.setVersionName(versionName);
		payload.setLatestVersions(latestVersions);
		ParametersType params = new ParametersType();
		// modelthreshold
		ParameterType p = new ParameterType();
		p.setName("modelthreshold");
		p.setValue(modelthreshold);
		params.getParameter().add(p);

		// labelthreshold
		p = new ParameterType();
		p.setName("labelthreshold");
		p.setValue(labelthreshold);
		params.getParameter().add(p);

		// contextthreshold
		p = new ParameterType();
		p.setName("contextthreshold");
		p.setValue(contextthreshold);
		params.getParameter().add(p);

		if ("Greedy".equals(method)) {
			// skipnweight
			p = new ParameterType();
			p.setName("skipnweight");
			p.setValue(skipnweight);
			params.getParameter().add(p);

			// subnweight
			p = new ParameterType();
			p.setName("subnweight");
			p.setValue(subnweight);
			params.getParameter().add(p);

			// skipeweight
			p = new ParameterType();
			p.setName("skipeweight");
			p.setValue(skipeweight);
			params.getParameter().add(p);
		}
		payload.setParameters(params);

		SearchForSimilarProcessesOutputMsgType res = port.searchForSimilarProcesses(payload);

		ResultType result = res.getResult();
		if (result.getCode() == -1) {
			throw new Exception (result.getMessage()); 
		} else {
			return res.getProcessSummaries();
		}
	}
}
