<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.apromore</groupId>
        <artifactId>apromore</artifactId>
        <version>1.1</version>
        <relativePath>../</relativePath>
    </parent>

    <artifactId>apromore-manager</artifactId>
    <packaging>war</packaging>
    <name>Apromore Manager</name>

    <build>
        <finalName>manager</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <unpackBundle>true</unpackBundle>
                    <instructions>
                        <!--<Embed-Directory>WEB-INF/lib</Embed-Directory>-->
                        <!-- All compile and runtime dependencies are directly embedded as JAR files, therefore not loaded trough OSGi -->
                        <Embed-Dependency>artifactId=mathCollection|taskmapping|lpsolve|jaxb2-basics-runtime</Embed-Dependency>
                        <!-- Also embed all transitive dependencies -->
                        <Embed-Transitive>false</Embed-Transitive>
                        <!-- 
                            Some Spring, Spring Data, EclipseLink indirect dependencies are
                            not picked up correctly by BND. Thus we need to maintain them
                            here manually.
                        -->
                        <Require-Bundle>
                            org.springframework.data.jpa;bundle-version="[1.1,1.2)",
                            org.springframework.data.core;bundle-version="[1.3,1.4)",
                            org.eclipse.persistence.jpa;bundle-version="[2.4,3.0)",
                            org.eclipse.persistence.core;bundle-version="[2.4,3.0)",
                            org.springframework.aop;bundle-version="[3.1,4.0)",
                            org.springframework.web;bundle-version="[3.1,4.0)",
                            org.springframework.beans;bundle-version="[3.1,4.0)"
                        </Require-Bundle>
                        <!-- Mark all Import-Packages as optional -->
                        <Import-Package>
                            org.eclipse.virgo.web.dm, <!-- Is not picked up by maven-bundle-plugin from web.xml -->
                            org.springframework.beans.factory.aspectj,
                            org.aopalliance.aop,
                            javax.persistence,
                            javax.persistence.criteria,
                            javax.persistence.metamodel,
                            javax.persistence.spi,
                            net.sf.cglib.proxy,
                            net.sf.cglib.core,
                            net.sf.cglib.reflect,
                            javax.wsdl.extensions,
                            com.google.common.base,
                            org.springframework.ws.transport.http,
                            com.sun.xml.bind.v2, <!-- JAXB RI implementation from SUN for BPMN Canoniser -->
                            !edu.sussex.nlp.jws,
                            !junit*,
                            !net.didion.jwnl*,
                            *
                        </Import-Package>
                        <JPA-PersistenceUnits>Apromore</JPA-PersistenceUnits>
                    </instructions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${maven.exec.plugin}</version>
                <executions>
                    <execution>
                        <id>weave-classes</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>org.eclipse.persistence.tools.weaving.jpa.StaticWeave</mainClass>
                    <commandlineArgs>-classpath %classpath;${basedir}/target/dependency/compile;${basedir}/target/dependency/provided -loglevel FINE -persistenceinfo ${basedir}/src/main/resources ${basedir}/target/classes ${basedir}/target/classes</commandlineArgs>
                    <classpathScope>compile</classpathScope>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-deps</id>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <outputDirectory>${project.build.directory}/repository/</outputDirectory>
                            <excludeScope>provided</excludeScope>
                            <excludeGroupIds>org.apromore</excludeGroupIds>
                            <excludeArtifactIds>
                                com.springsource.javax.xml.bind,com.springsource.org.aopalliance,jcl-over-slf4j,jul-to-slf4j,
                                jaxb2-basics-runtime,org.eclipse.gemini.blueprint.extender,org.eclipse.gemini.blueprint.io,
                                org.eclipse.gemini.blueprint.core,org.eclipse.osgi,org.eclipse.osgi.services,slf4j-api,org.springframework.aop,
                                org.springframework.asm,org.springframework.beans,org.springframework.context,org.springframework.core,
                                org.springframework.expression,org.springframework.jdbc,org.springframework.jms,org.springframework.orm,
                                jms,org.springframework.oxm,org.springframework.transaction,org.springframework.web,org.springframework.web.servlet,
                                org.springframework.aspects,org.springframework.context.support,commons-httpclient,
                                junit,hamcrest-core,hamcrest-all,asm,cglib,cglib-nodep,easymock,easymockclassextension,ipsedixit,javassist,objenesis,
                                powermock-api-easymock,powermock-api-support,powermock-core,powermock-module-javaagent,powermock-module-junit4,
                                powermock-module-junit4-common,powermock-module-junit4-rule-agent,powermock-reflect,spring-test,lpsolve,
                                jaxb2-basics-runtime,mathCollection,taskmapping,javax.persistence
                            </excludeArtifactIds>
                            <excludeTypes>pom</excludeTypes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                    <packagingExcludes>
                        WEB-INF/lib/anf*.jar,WEB-INF/lib/cpf*.jar,WEB-INF/lib/canoniser*.jar,WEB-INF/lib/deployment*.jar,WEB-INF/lib/manager*.jar,WEB-INF/lib/plugin*.jar,
                        WEB-INF/lib/aspectjrt*.jar,WEB-INF/lib/bonecp*.jar,WEB-INF/lib/com.*.jar,WEB-INF/lib/commons*.jar,WEB-INF/lib/guava*.jar,WEB-INF/lib/javax.*.jar,
                        WEB-INF/lib/jbpt*.jar,WEB-INF/lib/jcl*.jar,WEB-INF/lib/joda-time*.jar,WEB-INF/lib/jul*.jar,WEB-INF/lib/mysql-connector-java*.jar,WEB-INF/lib/org.*.jar,
                        WEB-INF/lib/slf4j-api*.jar,WEB-INF/lib/spring-data-*.jar,WEB-INF/lib/XmlSchema*.jar,WEB-INF/lib/xpdl-schema*.jar
                    </packagingExcludes>
                    <archive>
                        <manifestFile>
                            ${project.build.outputDirectory}/META-INF/MANIFEST.MF
                        </manifestFile>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- Clients -->
        <dependency>
            <groupId>org.apromore</groupId>
            <artifactId>manager-client</artifactId>
        </dependency>

        <!-- Core Plugins -->
        <dependency>
            <groupId>org.apromore.plugin</groupId>
            <artifactId>plugin-graph</artifactId>
        </dependency>

        <!-- Plugin API -->
        <dependency>
            <groupId>org.apromore.plugin</groupId>
            <artifactId>plugin-api</artifactId>
        </dependency>

        <!-- Canoniser API -->
        <dependency>
            <groupId>org.apromore.plugin</groupId>
            <artifactId>canoniser-api</artifactId>
        </dependency>

        <!-- Deployment API -->
        <dependency>
            <groupId>org.apromore.plugin</groupId>
            <artifactId>deployment-api</artifactId>
        </dependency>

        <!-- Schema -->
        <dependency>
            <groupId>org.apromore</groupId>
            <artifactId>anf-schema</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apromore</groupId>
            <artifactId>cpf-schema</artifactId>
        </dependency>

        <!-- 
            Depreciated dependencies, REMOVE AS SOON AS POSSIBLE
            Manager should not know about process formats 
        -->
        <dependency>
            <groupId>org.apromore</groupId>
            <artifactId>xpdl-schema</artifactId>
        </dependency>

        <!-- Blueprint OSGi -->
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>org.eclipse.persistence.jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>org.eclipse.persistence.core</artifactId>
        </dependency>

        <!-- BPM Imports -->
        <dependency>
            <groupId>org.jbpt</groupId>
            <artifactId>jbpt-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jbpt</groupId>
            <artifactId>jbpt-deco</artifactId>
        </dependency>
        <dependency>
            <groupId>tu</groupId>
            <artifactId>taskmapping</artifactId>
        </dependency>
        <dependency>
            <groupId>mathCollection</groupId>
            <artifactId>mathCollection</artifactId>
        </dependency>
        <dependency>
            <groupId>lpsolve</groupId>
            <artifactId>lpsolve</artifactId>
        </dependency>

        <!-- Commons -->
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${google.guava.version}</version>
        </dependency>

        <!-- logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>com.springsource.ch.qos.logback.classic</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>com.springsource.ch.qos.logback.core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.ws.commons.schema</groupId>
            <artifactId>XmlSchema</artifactId>
        </dependency>

        <!-- AOP -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>com.springsource.org.aspectj.runtime</artifactId>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>com.springsource.org.aspectj.weaver</artifactId>
        </dependency>

        <!-- Database -->
        <dependency>
            <groupId>com.jolbox</groupId>
            <artifactId>bonecp</artifactId>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.cglib</groupId>
            <artifactId>com.springsource.net.sf.cglib</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>

        <!-- Spring dependencies -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>org.springframework.beans</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>org.springframework.core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>org.springframework.context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>org.springframework.oxm</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>org.springframework.aspects</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>org.springframework.aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>org.springframework.transaction</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>org.springframework.orm</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>org.springframework.jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>org.springframework.web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>org.springframework.web.servlet</artifactId>
        </dependency>

        <!-- Spring-WS dependencies -->
        <dependency>
            <groupId>org.springframework.ws</groupId>
            <artifactId>org.springframework.xml</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.ws</groupId>
            <artifactId>org.springframework.ws</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.ws</groupId>
            <artifactId>org.springframework.ws.support</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.wsdl</groupId>
            <artifactId>com.springsource.javax.wsdl</artifactId>
        </dependency>

        <!-- JEE dependencies -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>com.springsource.javax.inject</artifactId>
        </dependency>

        <!-- JAXB -->
        <dependency>
            <groupId>org.jvnet.jaxb2_commons</groupId>
            <artifactId>jaxb2-basics-runtime</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>com.springsource.javax.xml.bind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sun.xml</groupId>
            <artifactId>com.springsource.com.sun.xml.bind</artifactId>
        </dependency>

        <!-- Test Scope Dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymockclassextension</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-easymock</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4-rule-agent</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apromore</groupId>
            <artifactId>test-tools</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apromore.plugin</groupId>
            <artifactId>plugin-api-provider</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apromore.plugin</groupId>
            <artifactId>canoniser-api-provider</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apromore.plugin</groupId>
            <artifactId>deployment-api-provider</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apromore.plugin</groupId>
            <artifactId>canoniser-epml</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apromore</groupId>
            <artifactId>epml-schema</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

</project>
