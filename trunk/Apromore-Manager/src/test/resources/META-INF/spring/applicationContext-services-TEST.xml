<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:sws="http://www.springframework.org/schema/web-services" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-2.0.xsd
            http://www.springframework.org/schema/util     http://www.springframework.org/schema/util/spring-util-3.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:/*.properties"/>
    <context:component-scan base-package="org.apromore"/>

    <!-- ************************** WebServices ************************** -->

    <sws:annotation-driven/>

    <sws:dynamic-wsdl id="manager" portTypeName="manager" locationUri="http://localhost:80/Apromore/services/manager">
        <sws:xsd location="classpath:/manager.xsd"/>
    </sws:dynamic-wsdl>

    <sws:interceptors>
        <bean class="org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor"/>
        <bean class="org.springframework.ws.soap.server.endpoint.interceptor.SoapEnvelopeLoggingInterceptor"
              p:logRequest="true" p:logResponse="true"/>
        <bean id="validatingInterceptor" class="org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor"
              p:schemas-ref="schemasList" p:validateRequest="true" p:validateResponse="true"/>
    </sws:interceptors>

    <!-- JAXB marshelling -->
    <bean id="marshallingMethodProcessor" class="org.springframework.ws.server.endpoint.adapter.method.MarshallingPayloadMethodProcessor"
          p:marshaller-ref="jaxb2Marshaller" p:unmarshaller-ref="jaxb2Marshaller"/>

    <bean id="defaultMethodEndpointAdapter" class="org.springframework.ws.server.endpoint.adapter.DefaultMethodEndpointAdapter">
        <property name="methodArgumentResolvers">
            <list>
                <ref bean="marshallingMethodProcessor"/>
            </list>
        </property>
        <property name="methodReturnValueHandlers">
            <list>
                <ref bean="marshallingMethodProcessor"/>
            </list>
        </property>
    </bean>

    <bean id="jaxb2Marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="schemas" ref="schemasList"/>
        <property name="contextPaths">
            <list>
                <value>org.apromore.model</value>
            </list>
        </property>
    </bean>

    <util:list id="schemasList">
        <value>classpath:/manager.xsd</value>
    </util:list>


    <!-- ************************** Non WebServices ************************** -->

    <bean id="dataAccessCanoniserManager" class="org.apromore.dao.service.DataAccessCanoniserManagerImpl"/>
    <bean id="canoniserManager" class="org.apromore.canoniser.service.CanoniserManagerImpl" p:client-ref="canoniserDataAccessClient"/>
    <bean id="canoniserDataAccessClient" class="org.apromore.canoniser.da.CanoniserDataAccessClient" p:manager-ref="dataAccessCanoniserManager"/>
    <bean id="managerCanoniserClient" class="org.apromore.manager.canoniser.ManagerCanoniserClient" p:manager-ref="canoniserManager"/>

    <bean id="canonicalToGraph" class="org.apromore.graph.canonical.converter.CanonicalToGraph" />
    <bean id="graphToCanonical" class="org.apromore.graph.canonical.converter.GraphToCanonical" />

    <!--<bean id="CanoniserService" class="org.apromore.service.impl.CanoniserServiceImpl"/>-->
    <!--<bean id="ContentService" class="org.apromore.service.impl.ContentServiceImpl"/>-->
    <!--<bean id="DomainService" class="org.apromore.service.impl.DomainServiceImpl"/>-->
    <!--<bean id="FormatService" class="org.apromore.service.impl.FormatServiceImpl"/>-->
    <!--<bean id="FragmentService" class="org.apromore.service.impl.FragmentServiceImpl"/>-->
    <!--<bean id="GraphService" class="org.apromore.service.impl.GraphServiceImpl"/>-->
    <!--<bean id="LockService" class="org.apromore.service.impl.LockServiceImpl"/>-->
    <!--<bean id="ProcessService" class="org.apromore.service.impl.ProcessServiceImpl"/>-->
    <!--<bean id="RepositoryService" class="org.apromore.service.impl.RepositoryServiceImpl"/>-->
    <!--<bean id="SimilarityService" class="org.apromore.service.impl.SimilarityServiceImpl"/>-->
    <!--<bean id="MergeService" class="org.apromore.service.impl.MergeServiceImpl"/>-->
    <!--<bean id="SessionService" class="org.apromore.service.impl.SessionServiceImpl"/>-->
    <!--<bean id="UserService" class="org.apromore.service.impl.UserServiceImpl"/>-->
    <!--<bean id="DeploymentService" class="org.apromore.service.impl.DeploymentServiceImpl"/>-->
    <!--<bean id="PluginService" class="org.apromore.service.impl.PluginServiceImpl"/>-->

    <!--<bean id="ComposerService" class="org.apromore.service.impl.ComposerServiceImpl"/>-->
    <!--<bean id="DecomposerService" class="org.apromore.service.impl.DecomposerServiceImpl"/>-->

    <!--<bean id="CanonicalConverter" class="org.apromore.service.impl.CanonicalConverterAdapter"/>-->
    <!--<bean id="UIHelper" class="org.apromore.service.helper.UIHelper"/>-->
    <!--<bean id="BondContentHandler" class="org.apromore.service.helper.BondContentHandler"/>-->
    <!--<bean id="ChangePropagator" class="org.apromore.service.helper.ChangePropagator"/>-->
    <!--<bean id="PocketMapper" class="org.apromore.service.helper.PocketMapper"/>-->

    <!-- Plugin Beans (Workaround until OSGi is here) -->
    <bean id="springPluginProvider" class="org.apromore.plugin.provider.impl.SimpleSpringPluginProvider"/>
    <bean id="springCanoniserProvider" class="org.apromore.canoniser.provider.impl.SimpleSpringCanoniserProvider"/>
    <bean id="springDeploymentProvider" class="org.apromore.plugin.deployment.provider.impl.SimpleSpringDeploymentPluginProvider"/>

</beans>