package org.apromore.dao.model;

import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.data.jpa.domain.AbstractPersistable;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Content generated by hbm2java
 */
@Entity
@Table(name = "content")
@Configurable("content")
public class Content implements Serializable {

    private Integer id;
    private String code;

    private Node boundaryE;
    private Node boundaryS;

//    private Set<FragmentVersion> fragmentVersions = new HashSet<FragmentVersion>(0);
    private Set<Node> nodes = new HashSet<Node>(0);
    private Set<Edge> edges = new HashSet<Edge>(0);

    /**
     * Public Constructor.
     */
    public Content() { }



    /**
     * returns the Id of this Object.
     * @return the id
     */
    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    /**
     * Sets the Id of this Object
     * @param id the new Id.
     */
    public void setId(final Integer id) {
        this.id = id;
    }



    @Column(name = "code", length = 65535)
    public String getCode() {
        return this.code;
    }

    public void setCode(final String newContentHash) {
        this.code = newContentHash;
    }



    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "boundary_e")
    public Node getBoundaryE() {
        return this.boundaryE;
    }

    public void setBoundaryE(Node nodeByBoundaryE) {
        this.boundaryE = nodeByBoundaryE;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "boundary_s")
    public Node getBoundaryS() {
        return this.boundaryS;
    }

    public void setBoundaryS(Node nodeByBoundaryS) {
        this.boundaryS = nodeByBoundaryS;
    }


//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "content")
//    public Set<FragmentVersion> getFragmentVersions() {
//        return this.fragmentVersions;
//    }
//
//    public void setFragmentVersions(final Set<FragmentVersion> newFragmentVersions) {
//        this.fragmentVersions = newFragmentVersions;
//    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "content")
    public Set<Node> getNodes() {
        return this.nodes;
    }

    public void setNodes(final Set<Node> newNodes) {
        this.nodes = newNodes;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "content")
    public Set<Edge> getEdges() {
        return this.edges;
    }

    public void setEdges(final Set<Edge> newEdges) {
        this.edges = newEdges;
    }

}


