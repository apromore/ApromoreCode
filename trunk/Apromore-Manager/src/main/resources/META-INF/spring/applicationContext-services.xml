<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:sws="http://www.springframework.org/schema/web-services" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
            http://www.springframework.org/schema/util     http://www.springframework.org/schema/util/spring-util-3.0.xsd
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-2.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <context:component-scan base-package="org.apromore"/>

    <!-- ************************** WebServices ************************** -->

    <sws:annotation-driven />

    <sws:dynamic-wsdl id="manager" portTypeName="Manager" locationUri="/services/manager/" targetNamespace="urn:qut-edu-au:schema:apromore:manager">
        <sws:xsd location="classpath:manager.xsd"/>
    </sws:dynamic-wsdl>

    <sws:interceptors>
        <bean class="org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor"/>
        <bean class="org.springframework.ws.soap.server.endpoint.interceptor.SoapEnvelopeLoggingInterceptor"
              p:logRequest="true" p:logResponse="true"/>
        <bean id="validatingInterceptor"  class="org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor"
              p:schemas-ref="schemasList" p:validateRequest="false" p:validateResponse="false"/>
    </sws:interceptors>

    <bean id="marshallingMethodProcessor" class="org.springframework.ws.server.endpoint.adapter.method.MarshallingPayloadMethodProcessor"
        p:marshaller-ref="jaxb2Marshaller" p:unmarshaller-ref="jaxb2Marshaller"/>

    <bean id="defaultMethodEndpointAdapter" class="org.springframework.ws.server.endpoint.adapter.DefaultMethodEndpointAdapter">
        <property name="methodArgumentResolvers">
            <list>
                <ref bean="marshallingMethodProcessor"/>
            </list>
        </property>
        <property name="methodReturnValueHandlers">
            <list>
                <ref bean="marshallingMethodProcessor"/>
            </list>
        </property>
    </bean>

    <bean id="jaxb2Marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="schemas" ref="schemasList" />
        <property name="contextPaths">
            <list>
                <value>org.apromore.model</value>
            </list>
        </property>
    </bean>

    <util:list id="schemasList">
        <value>classpath:manager.xsd</value>
    </util:list>

    <bean id="messageFactory" class="org.springframework.ws.soap.saaj.SaajSoapMessageFactory"/>
    <bean id="messageReceiver" class="org.springframework.ws.soap.server.SoapMessageDispatcher"/>


    <!-- ************************** Non WebServices ************************** -->

    <bean id="canonicalToGraph" class="org.apromore.graph.canonical.converter.CanonicalToGraph" />
    <bean id="graphToCanonical" class="org.apromore.graph.canonical.converter.GraphToCanonical" />

    <!-- Plugin Beans (Workaround until OSGi is here) -->
    <bean id="springPluginProvider" class="org.apromore.plugin.provider.impl.SimpleSpringPluginProvider"/>
    <bean id="springCanoniserProvider" class="org.apromore.canoniser.provider.impl.SimpleSpringCanoniserProvider"/>
    <bean id="springDeploymentProvider" class="org.apromore.plugin.deployment.provider.impl.SimpleSpringDeploymentPluginProvider"/>

</beans>