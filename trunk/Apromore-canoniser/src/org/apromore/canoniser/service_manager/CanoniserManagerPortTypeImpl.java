
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package org.apromore.canoniser.service_manager;

import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.util.logging.Logger;

import javax.activation.DataHandler;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.Marshaller;
import javax.xml.bind.Unmarshaller;

import org.apromore.anf.AnnotationsType;
import org.apromore.anf.ObjectFactory;
import org.apromore.canoniser.common.Constants;
import org.apromore.canoniser.da.RequestToDA;
import org.apromore.canoniser.model_manager.CanoniseProcessInputMsgType;
import org.apromore.canoniser.model_manager.CanoniseProcessOutputMsgType;
import org.apromore.canoniser.model_manager.ResultType;
import org.apromore.cpf.CanonicalProcessType;
import org.wfmc._2008.xpdl2.PackageType;

import pkg.XPDL2Canonical;

/**
 * This class was generated by Apache CXF 2.2.7
 * Thu Apr 22 16:26:46 EST 2010
 * Generated source version: 2.2.7
 * 
 */

@javax.jws.WebService(
		serviceName = "CanoniserManagerService",
		portName = "CanoniserManager",
		targetNamespace = "http://www.apromore.org/canoniser/service_manager",
		wsdlLocation = "http://localhost:8080/Apromore-canoniser/services/CanoniserManager?wsdl",
		endpointInterface = "org.apromore.canoniser.service_manager.CanoniserManagerPortType")

		public class CanoniserManagerPortTypeImpl implements CanoniserManagerPortType {

	private static final Logger LOG = Logger.getLogger(CanoniserManagerPortTypeImpl.class.getName());

	/* (non-Javadoc)
	 * @see org.apromore.canoniser.service_manager.CanoniserManagerPortType#canoniseProcess(org.apromore.canoniser.model_manager.CanoniseProcessInputMsgType  payload )*
	 */
	public CanoniseProcessOutputMsgType canoniseProcess(CanoniseProcessInputMsgType payload) { 
		LOG.info("Executing operation canoniseProcess");
		System.out.println(payload);
		CanoniseProcessOutputMsgType res = new CanoniseProcessOutputMsgType();
		ResultType result = new ResultType();
		res.setResult(result);

		try {
			DataHandler handler = payload.getProcessDescription();
			InputStream process_xml = handler.getInputStream();
			String nativeType = payload.getNativeType();
			String processName = payload.getProcessName();

			JAXBContext jc1 = JAXBContext.newInstance(Constants.JAXB_CONTEXT_XPDL);
			Unmarshaller u = jc1.createUnmarshaller();
			JAXBElement<PackageType> rootElement = (JAXBElement<PackageType>) u.unmarshal(process_xml);
			PackageType pkg = rootElement.getValue();

			XPDL2Canonical xpdl2canonical = new XPDL2Canonical(pkg);

			JAXBContext jc2 = JAXBContext.newInstance(Constants.JAXB_CONTEXT_ANF);
			Marshaller m = jc2.createMarshaller();
			m.setProperty(javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE );
			JAXBElement<AnnotationsType> anf = new org.apromore.anf.ObjectFactory().createAnnotations(xpdl2canonical.getAnf());
			ByteArrayOutputStream anf_xml = new ByteArrayOutputStream();
			m.marshal(anf, anf_xml);
			
			JAXBContext jc3 = JAXBContext.newInstance(Constants.JAXB_CONTEXT_CPF);
			m = jc3.createMarshaller();
			m.setProperty(javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE );
			JAXBElement<CanonicalProcessType> cpf = new org.apromore.cpf.ObjectFactory().createCanonicalProcess(xpdl2canonical.getCpf());
			ByteArrayOutputStream cpf_xml = new ByteArrayOutputStream();
			m.marshal(cpf, cpf_xml);
			
			RequestToDA request = new RequestToDA();
			request.StoreProcess (processName, nativeType, process_xml, cpf_xml, anf_xml);

			result.setCode(0);
			result.setMessage("");

		} catch (Exception ex) {
			ex.printStackTrace();
			result.setCode(-1);
			result.setMessage(ex.getMessage());
		}
		return res;
	}

}
