
package org.apromore.canoniser.da;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 2.2.7
 * Fri Apr 23 15:57:22 EST 2010
 * Generated source version: 2.2.7
 * 
 */

public final class DACanoniserPortType_DACanoniser_Client {

    private static final QName SERVICE_NAME = new QName("http://www.apromore.org/data_access/service_canoniser", "DACanoniserService");

    private DACanoniserPortType_DACanoniser_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = DACanoniserService.WSDL_LOCATION;
        if (args.length > 0) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        DACanoniserService ss = new DACanoniserService(wsdlURL, SERVICE_NAME);
        DACanoniserPortType port = ss.getDACanoniser();  
        
        {
        System.out.println("Invoking storeNativeCpf...");
        org.apromore.canoniser.model_da.StoreNativeCpfInputMsgType _storeNativeCpf_payload = new org.apromore.canoniser.model_da.StoreNativeCpfInputMsgType();
        _storeNativeCpf_payload.setProcessName("ProcessName-1017860975");
        _storeNativeCpf_payload.setNativeType("NativeType-623909033");
        _storeNativeCpf_payload.setUsername("Username1939399209");
        javax.activation.DataHandler _storeNativeCpf_payloadNative = null;
        _storeNativeCpf_payload.setNative(_storeNativeCpf_payloadNative);
        org.apromore.cpf.CanonicalProcessType _storeNativeCpf_payloadCpf = new org.apromore.cpf.CanonicalProcessType();
        java.util.List<org.apromore.cpf.NetType> _storeNativeCpf_payloadCpfNet = new java.util.ArrayList<org.apromore.cpf.NetType>();
        org.apromore.cpf.NetType _storeNativeCpf_payloadCpfNetVal1 = new org.apromore.cpf.NetType();
        java.util.List<org.apromore.cpf.NodeType> _storeNativeCpf_payloadCpfNetVal1Node = new java.util.ArrayList<org.apromore.cpf.NodeType>();
        _storeNativeCpf_payloadCpfNetVal1.getNode().addAll(_storeNativeCpf_payloadCpfNetVal1Node);
        java.util.List<org.apromore.cpf.EdgeType> _storeNativeCpf_payloadCpfNetVal1Edge = new java.util.ArrayList<org.apromore.cpf.EdgeType>();
        _storeNativeCpf_payloadCpfNetVal1.getEdge().addAll(_storeNativeCpf_payloadCpfNetVal1Edge);
        _storeNativeCpf_payloadCpfNetVal1.setId(new java.math.BigInteger("4623408355740744732883961992282276078"));
        _storeNativeCpf_payloadCpfNet.add(_storeNativeCpf_payloadCpfNetVal1);
        _storeNativeCpf_payloadCpf.getNet().addAll(_storeNativeCpf_payloadCpfNet);
        java.util.List<org.apromore.cpf.ResourceTypeType> _storeNativeCpf_payloadCpfResourceType = new java.util.ArrayList<org.apromore.cpf.ResourceTypeType>();
        org.apromore.cpf.ResourceTypeType _storeNativeCpf_payloadCpfResourceTypeVal1 = new org.apromore.cpf.ResourceTypeType();
        _storeNativeCpf_payloadCpfResourceTypeVal1.setName("Name593574652");
        _storeNativeCpf_payloadCpfResourceTypeVal1.setConfigurable(Boolean.valueOf(true));
        _storeNativeCpf_payloadCpfResourceTypeVal1.setId(new java.math.BigInteger("-82713273790395527355566527038392741404"));
        java.util.List<java.math.BigInteger> _storeNativeCpf_payloadCpfResourceTypeVal1SpecializationIds = new java.util.ArrayList<java.math.BigInteger>();
        _storeNativeCpf_payloadCpfResourceTypeVal1.getSpecializationIds().addAll(_storeNativeCpf_payloadCpfResourceTypeVal1SpecializationIds);
        _storeNativeCpf_payloadCpfResourceType.add(_storeNativeCpf_payloadCpfResourceTypeVal1);
        _storeNativeCpf_payloadCpf.getResourceType().addAll(_storeNativeCpf_payloadCpfResourceType);
        java.util.List<org.apromore.cpf.ObjectType> _storeNativeCpf_payloadCpfObject = new java.util.ArrayList<org.apromore.cpf.ObjectType>();
        org.apromore.cpf.ObjectType _storeNativeCpf_payloadCpfObjectVal1 = new org.apromore.cpf.ObjectType();
        _storeNativeCpf_payloadCpfObjectVal1.setName("Name-135380911");
        _storeNativeCpf_payloadCpfObjectVal1.setConfigurable(Boolean.valueOf(false));
        _storeNativeCpf_payloadCpfObjectVal1.setId(new java.math.BigInteger("-5803271495986158703444800831984205672"));
        _storeNativeCpf_payloadCpfObject.add(_storeNativeCpf_payloadCpfObjectVal1);
        _storeNativeCpf_payloadCpf.getObject().addAll(_storeNativeCpf_payloadCpfObject);
        _storeNativeCpf_payloadCpf.setUri("Uri-1544754027");
        _storeNativeCpf_payloadCpf.setVersion(new java.math.BigDecimal("7285635997267629892.2435062659657103555"));
        _storeNativeCpf_payloadCpf.setName("Name1609226967");
        _storeNativeCpf_payloadCpf.setRootId(new java.math.BigInteger("-33451441355389847025465261519078190070"));
        _storeNativeCpf_payload.setCpf(_storeNativeCpf_payloadCpf);
        org.apromore.anf.AnnotationsType _storeNativeCpf_payloadAnf = new org.apromore.anf.AnnotationsType();
        java.util.List<org.apromore.anf.AnnotationType> _storeNativeCpf_payloadAnfAnnotation = new java.util.ArrayList<org.apromore.anf.AnnotationType>();
        org.apromore.anf.AnnotationType _storeNativeCpf_payloadAnfAnnotationVal1 = new org.apromore.anf.AnnotationType();
        java.util.List<java.lang.Object> _storeNativeCpf_payloadAnfAnnotationVal1Any = new java.util.ArrayList<java.lang.Object>();
        _storeNativeCpf_payloadAnfAnnotationVal1.getAny().addAll(_storeNativeCpf_payloadAnfAnnotationVal1Any);
        _storeNativeCpf_payloadAnfAnnotationVal1.setId(new java.math.BigInteger("70264676966108781771291651505521397180"));
        _storeNativeCpf_payloadAnfAnnotationVal1.setCpfId(new java.math.BigInteger("-35868387518674207402622739281018466932"));
        _storeNativeCpf_payloadAnfAnnotation.add(_storeNativeCpf_payloadAnfAnnotationVal1);
        _storeNativeCpf_payloadAnf.getAnnotation().addAll(_storeNativeCpf_payloadAnfAnnotation);
        _storeNativeCpf_payloadAnf.setUri("Uri2065901326");
        _storeNativeCpf_payloadAnf.setVersion(new java.math.BigDecimal("2466097170814645919.2663144142316365705"));
        _storeNativeCpf_payloadAnf.setName("Name1125903781");
        _storeNativeCpf_payloadAnf.setCpfUri("CpfUri-371864027");
        _storeNativeCpf_payloadAnf.setCpfVersion(new java.math.BigDecimal("2512854162432129076.5274169902045606733"));
        _storeNativeCpf_payload.setAnf(_storeNativeCpf_payloadAnf);
        org.apromore.canoniser.model_da.StoreNativeCpfOutputMsgType _storeNativeCpf__return = port.storeNativeCpf(_storeNativeCpf_payload);
        System.out.println("storeNativeCpf.result=" + _storeNativeCpf__return);


        }

        System.exit(0);
    }

}
