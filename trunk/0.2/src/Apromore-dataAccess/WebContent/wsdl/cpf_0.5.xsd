<?xml version="1.0" encoding="UTF-8"?>

<!--
 Copyright (C) 2009, The AProMoRe Foundation
 
 All rights reserved. This program and the accompanying materials
 are made available under the terms of the XX license
 which accompanies this distribution, and is available at XX
 
 Contributors:
     Marcello La Rosa
     
     v0.1 - initial document
     v0.2 - added 'version' attribute to both this document and type 'CanonicalProcessType'
     v0.3 - added extensible 'attribute' to all super-types
     v0.4 - added process meta-data (author, creationDate...), changed type of attribute 'value' to 'anySimpleType'
     v0.5 - added 'id' attribute to 'objectRefType' and 'resourceTypeRefType', boolean external property to 'TaskType'

-->

<schema xmlns="http://www.w3.org/2001/XMLSchema"
        xmlns:cpf="http://www.apromore.org/CPF"
        targetNamespace="http://www.apromore.org/CPF"
        attributeFormDefault="unqualified" elementFormDefault="unqualified"
        version="0.4">

  <element name="CanonicalProcess" type="cpf:CanonicalProcessType">
    <unique name="nIdUn"><!-- all net ids must be different -->
	  <selector xpath="./*"/>
	  <field xpath="@id"/>
	</unique>    
	<keyref name="rootRef" refer="cpf:nIdUn">
	  <selector xpath="."/>
	  <field xpath="@rootId"/>
	</keyref>
	<keyref name="subnetRef" refer="cpf:nIdUn">
	  <selector xpath=".//Node"/>
	  <field xpath="@subnetId"/>
	</keyref>		
    <unique name="idUn"><!-- all ids must be different -->
	  <selector xpath=".//*"/>
	  <field xpath="@id"/>
	</unique>
	<unique name="resourceTypeIdUn">
	  <selector xpath="./ResourceType"/>
	  <field xpath="@id"/>
	</unique>
	<unique name="objectIdUn">
	  <selector xpath="./Object"/>
	  <field xpath="@id"/>
	</unique>			
   	<keyref name="resourceTypeRef" refer="cpf:resourceTypeIdUn">
	  <selector xpath=".//Node/resourceTypeRef"/>
	  <field xpath="@resourceTypeId"/>
	</keyref>
   	<keyref name="objectRef" refer="cpf:objectIdUn">
	  <selector xpath=".//Node/objectRef"/>
	  <field xpath="@objectId"/>
	</keyref>	
  </element> 

  <complexType name="typeAttribute">
	<attribute name="typeRef" type="string" use="required" />
	<attribute name="value" type="anySimpleType" />
  </complexType>   
  
  <complexType name="CanonicalProcessType">
    <sequence>
      <element name="Net" type="cpf:NetType" minOccurs="1" maxOccurs="unbounded">
        <unique name="idUn2">
	      <selector xpath="./*"/>
	      <field xpath="@id"/>
	    </unique>
      	<keyref name="sourceRef" refer="cpf:idUn2">
	      <selector xpath="./Edge"/>
	      <field xpath="@sourceId"/>
	    </keyref>
	    <keyref name="targetRef" refer="cpf:idUn2">
	      <selector xpath="./Edge"/>
	      <field xpath="@targetId"/>
	    </keyref>
      </element>
      <element name="ResourceType" minOccurs="0" maxOccurs="unbounded" type="cpf:ResourceTypeType"/>
   	  <element name="Object" minOccurs="0" maxOccurs="unbounded" type="cpf:ObjectType"/>
   	  <element name="attribute" type="cpf:typeAttribute" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="uri" type="anyURI" use="required"/>
    <attribute name="version" type="decimal" use="required"/>
    <attribute name="name" type="string" use="required"/>
   	<attribute name="author" type="string"/>
   	<attribute name="creationDate" type="dateTime"/>
   	<attribute name="modificationDate" type="dateTime"/>
    <attribute name="rootId" type="positiveInteger" use="required"/>
  </complexType>    

  <complexType name="NetType">
  	<sequence>
   	  <element name="Node" minOccurs="1" maxOccurs="unbounded" type="cpf:NodeType"/>
   	  <element name="Edge" minOccurs="0" maxOccurs="unbounded" type="cpf:EdgeType"/>
   	  <element name="attribute" type="cpf:typeAttribute" minOccurs="0" maxOccurs="unbounded"/>
   	</sequence>
    <attribute name="id" type="positiveInteger" use="required"/>
  </complexType>              
       
  <complexType name="EdgeType">
   	<sequence>
  	  <element name="attribute" type="cpf:typeAttribute" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="positiveInteger" use="required"/>
    <attribute name="condition" type="string" use="optional"/>
    <attribute name="default" type="boolean" use="optional" default="true"/>
    <attribute name="sourceId" type="positiveInteger" use="required"/>
    <attribute name="targetId" type="positiveInteger" use="required"/>
  </complexType>
  
  <complexType name="NodeType">
  	<sequence>
   	  <element name="name" type="string" minOccurs="0"/>
   	  <element name="configurable" type="boolean" default="false" minOccurs="0"/>
   	  <element name="attribute" type="cpf:typeAttribute" minOccurs="0" maxOccurs="unbounded"/>
   	</sequence>
    <attribute name="id" type="positiveInteger" use="required"/>
  </complexType>
  
  <complexType name="WorkType">
  	<complexContent>
	  <extension base="cpf:NodeType">
	  <sequence>
	    <element name="resourceTypeRef" type="cpf:resourceTypeRefType" minOccurs="0" maxOccurs="unbounded"/>
	    <element name="objectRef" type="cpf:objectRefType" minOccurs="0" maxOccurs="unbounded"/>
	  </sequence>
      </extension>
    </complexContent>
  </complexType>
  
  <complexType name="resourceTypeRefType">
   	<sequence>
  	  <element name="attribute" type="cpf:typeAttribute" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="positiveInteger"/>
	<attribute name="resourceTypeId" type="positiveInteger"/>
	<attribute name="optional" type="boolean" default="false" use="optional"/>
	<attribute name="qualifier" type="string" use="optional"/>
  </complexType>
  
  <complexType name="objectRefType">
   	<sequence>
  	  <element name="attribute" type="cpf:typeAttribute" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="positiveInteger"/>
	<attribute name="objectId" type="positiveInteger"/>
	<attribute name="type" type="cpf:InputOutputType"/>
	<attribute name="optional" type="boolean" default="false" use="optional"/>
	<attribute name="consumed" type="boolean" default="false" use="optional"/>
  </complexType>
  
  <complexType name="TaskType">
  	<complexContent>
	  <extension base="cpf:WorkType">
        <attribute name="subnetId" type="positiveInteger"/>
        <attribute name="external" type="boolean" default="false" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  
  <complexType name="EventType">
  	<complexContent>
	  <extension base="cpf:WorkType"/>
    </complexContent>
  </complexType>
  
  <complexType name="MessageType">
  	<complexContent>
	  <extension base="cpf:EventType"/>
    </complexContent>
  </complexType>
  
  <complexType name="TimerType">
  	<complexContent>
	  <extension base="cpf:EventType"/>
    </complexContent>
  </complexType>
  
  <complexType name="RoutingType">
  	<complexContent>
	  <extension base="cpf:NodeType"/>
    </complexContent>
  </complexType>
  
  <complexType name="SplitType">
  	<complexContent>
	  <extension base="cpf:RoutingType"/>
    </complexContent>
  </complexType>  
  
  <complexType name="ORSplitType">
  	<complexContent>
	  <extension base="cpf:SplitType"/>
    </complexContent>
  </complexType>
  
  <complexType name="XORSplitType">
  	<complexContent>
	  <extension base="cpf:SplitType"/>
    </complexContent>
  </complexType> 
  
  <complexType name="ANDSplitType">
  	<complexContent>
	  <extension base="cpf:SplitType"/>
    </complexContent>
  </complexType>
  
  <complexType name="StateType">
  	<complexContent>
	  <extension base="cpf:RoutingType"/>
    </complexContent>
  </complexType>    
  
  <complexType name="JoinType">
  	<complexContent>
	  <extension base="cpf:RoutingType"/>
    </complexContent>
  </complexType>  
  
  <complexType name="ORJoinType">
  	<complexContent>
	  <extension base="cpf:JoinType"/>
    </complexContent>
  </complexType>
  
  <complexType name="XORJoinType">
  	<complexContent>
	  <extension base="cpf:JoinType"/>
    </complexContent>
  </complexType> 
  
  <complexType name="ANDJoinType">
  	<complexContent>
	  <extension base="cpf:JoinType"/>
    </complexContent>
  </complexType>
  
    <complexType name="ResourceTypeType">
  	<sequence>
   	  <element name="name" type="string"/>
   	  <element name="configurable" type="boolean" default="false" minOccurs="0"/>
   	  <element name="attribute" type="cpf:typeAttribute" minOccurs="0" maxOccurs="unbounded"/>
   	</sequence>
    <attribute name="id" type="positiveInteger" use="required"/>
    <attribute name="specializationIds" type="cpf:IdListType"/>
  </complexType>
  
  <complexType name="HumanType">
  	<complexContent>
	  <extension base="cpf:ResourceTypeType"/>
    </complexContent>
  </complexType>
  
  <complexType name="NonhumanType">
  	<complexContent>
	  <extension base="cpf:ResourceTypeType"/>
    </complexContent>
  </complexType>
  
  <complexType name="ObjectType">
  	<sequence>
   	  <element name="name" type="string"/>
   	  <element name="configurable" type="boolean" default="false" minOccurs="0"/>
   	  <element name="attribute" type="cpf:typeAttribute" minOccurs="0" maxOccurs="unbounded"/>
   	</sequence>
    <attribute name="id" type="positiveInteger" use="required"/>
  </complexType>
  
  <complexType name="HardType">
  	<complexContent>
	  <extension base="cpf:ObjectType"/>
    </complexContent>
  </complexType>
  
  <complexType name="SoftType">
  	<complexContent>
	  <extension base="cpf:ObjectType">
	    <sequence>
	      <element name="type" type="string"/>
	    </sequence>
	  </extension>
    </complexContent>
  </complexType>              
   
  <simpleType name="InputOutputType">
  	<restriction base="string">
  	  <enumeration value="input"/>
  	  <enumeration value="output"/>
  	</restriction>
  </simpleType>
  
  <simpleType name="IdListType">
  	<list itemType="positiveInteger"/>
  </simpleType>
   
</schema>