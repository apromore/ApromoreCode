
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package org.apromore.data_access.service_canoniser;

import java.io.IOException;
import java.io.InputStream;
import java.sql.SQLException;
import java.util.logging.Logger;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.activation.DataHandler;

import org.apromore.data_access.dao.ProcessDao;
import org.apromore.data_access.exception.ExceptionAnntotationName;
import org.apromore.data_access.exception.ExceptionDao;
import org.apromore.data_access.exception.ExceptionStoreVersion;
import org.apromore.data_access.exception.ExceptionSyncNPF;
import org.apromore.data_access.model_canoniser.ProcessSummaryType;
import org.apromore.data_access.model_canoniser.ResultType;
import org.apromore.data_access.model_canoniser.StoreNativeCpfInputMsgType;
import org.apromore.data_access.model_canoniser.StoreNativeCpfOutputMsgType;
import org.apromore.data_access.model_canoniser.StoreNativeInputMsgType;
import org.apromore.data_access.model_canoniser.StoreNativeOutputMsgType;
import org.apromore.data_access.model_canoniser.StoreVersionInputMsgType;
import org.apromore.data_access.model_canoniser.StoreVersionOutputMsgType;
import org.apromore.data_access.model_canoniser.WriteAnnotationInputMsgType;
import org.apromore.data_access.model_canoniser.WriteAnnotationOutputMsgType;

/**
 * This class was generated by Apache CXF 2.2.9
 * Thu Oct 21 15:48:04 CEST 2010
 * Generated source version: 2.2.9
 * 
 */

@javax.jws.WebService(
                      serviceName = "DACanoniserService",
                      portName = "DACanoniser",
                      targetNamespace = "http://www.apromore.org/data_access/service_canoniser",
                      wsdlLocation = "http://localhost:8080/Apromore-dataAccess/services/DACanoniser?wsdl",
                      endpointInterface = "org.apromore.data_access.service_canoniser.DACanoniserPortType")

		public class DACanoniserPortTypeImpl implements DACanoniserPortType {

	private static final Logger LOG = Logger.getLogger(DACanoniserPortTypeImpl.class.getName());


	public org.apromore.data_access.model_canoniser.StoreNativeCpfOutputMsgType storeNativeCpf(org.apromore.data_access.model_canoniser.StoreNativeCpfInputMsgType payload) { 
        LOG.info("Executing operation storeNativeCpf");
        System.out.println(payload);
        try {
            org.apromore.data_access.model_canoniser.StoreNativeCpfOutputMsgType _return = new org.apromore.data_access.model_canoniser.StoreNativeCpfOutputMsgType();
            org.apromore.data_access.model_canoniser.ResultType _returnResult = new org.apromore.data_access.model_canoniser.ResultType();
            _returnResult.setMessage("Message-2133093718");
            _returnResult.setCode(Integer.valueOf(-371409120));
            _return.setResult(_returnResult);
            org.apromore.data_access.model_canoniser.ProcessSummaryType _returnProcessSummary = new org.apromore.data_access.model_canoniser.ProcessSummaryType();
            java.util.List<org.apromore.data_access.model_canoniser.VersionSummaryType> _returnProcessSummaryVersionSummaries = new java.util.ArrayList<org.apromore.data_access.model_canoniser.VersionSummaryType>();
            org.apromore.data_access.model_canoniser.VersionSummaryType _returnProcessSummaryVersionSummariesVal1 = new org.apromore.data_access.model_canoniser.VersionSummaryType();
            java.util.List<org.apromore.data_access.model_canoniser.AnnotationsType> _returnProcessSummaryVersionSummariesVal1Annotations = new java.util.ArrayList<org.apromore.data_access.model_canoniser.AnnotationsType>();
            _returnProcessSummaryVersionSummariesVal1.getAnnotations().addAll(_returnProcessSummaryVersionSummariesVal1Annotations);
            _returnProcessSummaryVersionSummariesVal1.setRanking("Ranking-2066326613");
            _returnProcessSummaryVersionSummariesVal1.setName("Name1752766461");
            _returnProcessSummaryVersionSummariesVal1.setLastUpdate("LastUpdate166678884");
            _returnProcessSummaryVersionSummariesVal1.setCreationDate("CreationDate-1654488869");
            _returnProcessSummaryVersionSummaries.add(_returnProcessSummaryVersionSummariesVal1);
            _returnProcessSummary.getVersionSummaries().addAll(_returnProcessSummaryVersionSummaries);
            _returnProcessSummary.setOriginalNativeType("OriginalNativeType-1293236718");
            _returnProcessSummary.setName("Name-561102455");
            _returnProcessSummary.setId(Integer.valueOf(441762123));
            _returnProcessSummary.setDomain("Domain680400275");
            _returnProcessSummary.setRanking("Ranking-1668171638");
            _returnProcessSummary.setLastVersion("LastVersion121640900");
            _returnProcessSummary.setOwner("Owner1867221772");
            _return.setProcessSummary(_returnProcessSummary);
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }


	public org.apromore.data_access.model_canoniser.StoreVersionOutputMsgType storeVersion(org.apromore.data_access.model_canoniser.StoreVersionInputMsgType payload) { 
        LOG.info("Executing operation storeVersion");
        System.out.println(payload);
        try {
            org.apromore.data_access.model_canoniser.StoreVersionOutputMsgType _return = new org.apromore.data_access.model_canoniser.StoreVersionOutputMsgType();
            org.apromore.data_access.model_canoniser.ResultType _returnResult = new org.apromore.data_access.model_canoniser.ResultType();
            _returnResult.setMessage("Message-1756016508");
            _returnResult.setCode(Integer.valueOf(-474507471));
            _return.setResult(_returnResult);
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }


	public org.apromore.data_access.model_canoniser.StoreNativeOutputMsgType storeNative(org.apromore.data_access.model_canoniser.StoreNativeInputMsgType payload) { 
        LOG.info("Executing operation storeNative");
        System.out.println(payload);
        try {
            org.apromore.data_access.model_canoniser.StoreNativeOutputMsgType _return = new org.apromore.data_access.model_canoniser.StoreNativeOutputMsgType();
            org.apromore.data_access.model_canoniser.ResultType _returnResult = new org.apromore.data_access.model_canoniser.ResultType();
            _returnResult.setMessage("Message874382896");
            _returnResult.setCode(Integer.valueOf(-79212599));
            _return.setResult(_returnResult);
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }


	public org.apromore.data_access.model_canoniser.WriteAnnotationOutputMsgType writeAnnotation(org.apromore.data_access.model_canoniser.WriteAnnotationInputMsgType payload) { 
        LOG.info("Executing operation writeAnnotation");
        System.out.println(payload);
        try {
            org.apromore.data_access.model_canoniser.WriteAnnotationOutputMsgType _return = new org.apromore.data_access.model_canoniser.WriteAnnotationOutputMsgType();
            org.apromore.data_access.model_canoniser.ResultType _returnResult = new org.apromore.data_access.model_canoniser.ResultType();
            _returnResult.setMessage("Message-463087206");
            _returnResult.setCode(Integer.valueOf(-1100586510));
            _return.setResult(_returnResult);
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }


	public WriteAnnotationOutputMsgType writeAnnotation(WriteAnnotationInputMsgType payload) { 
		LOG.info("Executing operation writeAnnotation");
		System.out.println(payload);
		WriteAnnotationOutputMsgType res = new WriteAnnotationOutputMsgType();
		ResultType result = new ResultType();
		res.setResult(result);
		try {
			Integer editSessionCode = payload.getEditSessionCode();
			String annotationName = payload.getAnnotationName();
			Boolean isNew = payload.isIsNew();
			DataHandler handler = payload.getAnf();
			InputStream anf_is = handler.getInputStream();
			Integer processId = payload.getProcessId();
			String version = payload.getVersion();
			String nat_type = payload.getNativeType();
			ProcessDao.getInstance().storeAnnotation(annotationName, processId, version, nat_type, anf_is, isNew);
			result.setCode(0);
			result.setMessage("");
		} catch (IOException e) {
			result.setCode(-1);
			result.setMessage(e.getMessage());
		} catch (SQLException e) {
			result.setCode(-1);
			result.setMessage(e.getMessage());
		} catch (ExceptionDao e) {
			result.setCode(-1);
			result.setMessage(e.getMessage());
		} catch (ExceptionAnntotationName e) {
			result.setCode(-3);
			result.setMessage(e.getMessage());
		}
		return res;
	}


	public StoreVersionOutputMsgType storeVersion(StoreVersionInputMsgType payload) { 
		LOG.info("Executing operation storeVersion");
		System.out.println(payload);
		StoreVersionOutputMsgType res = new StoreVersionOutputMsgType();
		ResultType result = new ResultType();
		res.setResult(result);
		int processId = payload.getProcessId();
		String nativeType = payload.getNativeType();
		String preVersion = payload.getPreVersion();
		int editSessionCode = payload.getEditSessionCode();
		try {
			DataHandler handlernat = payload.getNative();
			InputStream native_is = handlernat.getInputStream();

			DataHandler handlercpf = payload.getCpf();
			InputStream cpf_is = handlercpf.getInputStream();

			DataHandler handleranf = payload.getAnf();
			InputStream anf_is = handleranf.getInputStream();
			ProcessDao.getInstance().storeVersion 
			(editSessionCode, processId, preVersion, nativeType, native_is, cpf_is, anf_is);
			result.setCode(0);
			result.setMessage("");
		} catch (ExceptionDao ex) {
			result.setCode(-1);
			result.setMessage(ex.getMessage());
		} catch (SQLException ex) {
			result.setCode(-1);
			result.setMessage(ex.getMessage());
		} catch (IOException ex) {
			result.setCode(-1);
			result.setMessage(ex.getMessage());
		} catch (ExceptionStoreVersion ex) {
			result.setCode(-3);
			result.setMessage(ex.getMessage());
		} catch (ExceptionSyncNPF ex) {
			result.setCode(-1);
			result.setMessage(ex.getMessage());
		}
		return res;
	}


	public StoreNativeOutputMsgType storeNative(StoreNativeInputMsgType payload) { 
		LOG.info("Executing operation storeNative");
		System.out.println(payload);
		StoreNativeOutputMsgType res = new StoreNativeOutputMsgType();
		ResultType result = new ResultType();
		res.setResult(result);
		int processId = payload.getProcessId();
		String version = payload.getVersion();
		String nativeType = payload.getNativeType();

		try {
			DataHandler handler = payload.getNative();
			InputStream native_xml = handler.getInputStream();
			ProcessDao.getInstance().storeNative(nativeType, processId, version, native_xml);
			result.setCode(0);
			result.setMessage("");
		} catch (ExceptionDao ex) {
			result.setCode(-1);
			result.setMessage(ex.getMessage());
		} catch (SQLException ex) {
			result.setCode(-1);
			result.setMessage(ex.getMessage());
		} catch (IOException ex) {
			result.setCode(-1);
			result.setMessage(ex.getMessage());
		}
		return res;
	}

	/* (non-Javadoc)
	 * @see org.apromore.data_access.service_canoniser.DACanoniserPortType#storeNativeCpf(org.apromore.data_access.model_canoniser.StoreNativeCpfInputMsgType  payload )*
	 */
	public StoreNativeCpfOutputMsgType storeNativeCpf(StoreNativeCpfInputMsgType payload) { 
		LOG.info("Executing operation storeNativeCpf");
		System.out.println(payload);

		StoreNativeCpfOutputMsgType res = new StoreNativeCpfOutputMsgType();
		ResultType result = new ResultType();
		res.setResult(result);
		String username = payload.getUsername();
		String nativeType = payload.getNativeType();
		String processName = payload.getProcessName();
		String domain = payload.getDomain();
		String version = payload.getVersionName();
		String documentation = payload.getDocumentation();
		String created = payload.getCreationDate();
		String lastupdate = payload.getLastUpdate();

		try {
			DataHandler handler = payload.getNative();
			InputStream process_xml = handler.getInputStream();
			DataHandler handlercpf = payload.getCpf();
			InputStream cpf_xml = handlercpf.getInputStream();
			DataHandler handleranf = payload.getAnf();
			InputStream anf_xml = handleranf.getInputStream();

			ProcessSummaryType process = ProcessDao.getInstance().storeNativeCpf(username, processName, domain, 
					documentation, nativeType, version, created, lastupdate,
					process_xml, cpf_xml, anf_xml);
			res.setProcessSummary(process);
			result.setCode(0);
			result.setMessage("");
		} catch (ExceptionDao ex) {
			result.setCode(-1);
			result.setMessage(ex.getMessage());
		} catch (SQLException ex) {
			result.setCode(-1);
			result.setMessage(ex.getMessage());
		} catch (IOException ex) {
			result.setCode(-1);
			result.setMessage(ex.getMessage());
		}
		return res;
	}

}
