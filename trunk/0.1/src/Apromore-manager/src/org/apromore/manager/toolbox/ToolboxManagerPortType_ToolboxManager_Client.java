
package org.apromore.manager.toolbox;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 2.2.9
 * Thu Jan 27 15:49:10 CET 2011
 * Generated source version: 2.2.9
 * 
 */

public final class ToolboxManagerPortType_ToolboxManager_Client {

    private static final QName SERVICE_NAME = new QName("http://www.apromore.org/toolbox/service_manager", "ToolboxManagerService");

    private ToolboxManagerPortType_ToolboxManager_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = ToolboxManagerService.WSDL_LOCATION;
        if (args.length > 0) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        ToolboxManagerService ss = new ToolboxManagerService(wsdlURL, SERVICE_NAME);
        ToolboxManagerPortType port = ss.getToolboxManager();  
        
        {
        System.out.println("Invoking searchForSimilarProcesses...");
        org.apromore.manager.model_toolbox.SearchForSimilarProcessesInputMsgType _searchForSimilarProcesses_payload = new org.apromore.manager.model_toolbox.SearchForSimilarProcessesInputMsgType();
        _searchForSimilarProcesses_payload.setProcessId(1843210353);
        _searchForSimilarProcesses_payload.setVersionName("VersionName-1890760443");
        _searchForSimilarProcesses_payload.setAlgorithm("Algorithm-505284376");
        org.apromore.manager.model_toolbox.ParametersType _searchForSimilarProcesses_payloadParameters = new org.apromore.manager.model_toolbox.ParametersType();
        java.util.List<org.apromore.manager.model_toolbox.ParameterType> _searchForSimilarProcesses_payloadParametersParameter = new java.util.ArrayList<org.apromore.manager.model_toolbox.ParameterType>();
        org.apromore.manager.model_toolbox.ParameterType _searchForSimilarProcesses_payloadParametersParameterVal1 = new org.apromore.manager.model_toolbox.ParameterType();
        _searchForSimilarProcesses_payloadParametersParameterVal1.setName("Name520495290");
        _searchForSimilarProcesses_payloadParametersParameterVal1.setValue(0.05407292870207847);
        _searchForSimilarProcesses_payloadParametersParameter.add(_searchForSimilarProcesses_payloadParametersParameterVal1);
        _searchForSimilarProcesses_payloadParameters.getParameter().addAll(_searchForSimilarProcesses_payloadParametersParameter);
        _searchForSimilarProcesses_payload.setParameters(_searchForSimilarProcesses_payloadParameters);
        org.apromore.manager.model_toolbox.SearchForSimilarProcessesOutputMsgType _searchForSimilarProcesses__return = port.searchForSimilarProcesses(_searchForSimilarProcesses_payload);
        System.out.println("searchForSimilarProcesses.result=" + _searchForSimilarProcesses__return);


        }
        {
        System.out.println("Invoking mergeProcesses...");
        org.apromore.manager.model_toolbox.MergeProcessesInputMsgType _mergeProcesses_payload = new org.apromore.manager.model_toolbox.MergeProcessesInputMsgType();
        org.apromore.manager.model_toolbox.ProcessVersionIdsType _mergeProcesses_payloadProcessVersionIds = new org.apromore.manager.model_toolbox.ProcessVersionIdsType();
        java.util.List<org.apromore.manager.model_toolbox.ProcessVersionIdType> _mergeProcesses_payloadProcessVersionIdsProcessVersionId = new java.util.ArrayList<org.apromore.manager.model_toolbox.ProcessVersionIdType>();
        org.apromore.manager.model_toolbox.ProcessVersionIdType _mergeProcesses_payloadProcessVersionIdsProcessVersionIdVal1 = new org.apromore.manager.model_toolbox.ProcessVersionIdType();
        _mergeProcesses_payloadProcessVersionIdsProcessVersionIdVal1.setProcessId(Integer.valueOf(1752524738));
        _mergeProcesses_payloadProcessVersionIdsProcessVersionIdVal1.setVersionName("VersionName1976451493");
        _mergeProcesses_payloadProcessVersionIdsProcessVersionId.add(_mergeProcesses_payloadProcessVersionIdsProcessVersionIdVal1);
        _mergeProcesses_payloadProcessVersionIds.getProcessVersionId().addAll(_mergeProcesses_payloadProcessVersionIdsProcessVersionId);
        _mergeProcesses_payload.setProcessVersionIds(_mergeProcesses_payloadProcessVersionIds);
        org.apromore.manager.model_toolbox.ParametersType _mergeProcesses_payloadParameters = new org.apromore.manager.model_toolbox.ParametersType();
        java.util.List<org.apromore.manager.model_toolbox.ParameterType> _mergeProcesses_payloadParametersParameter = new java.util.ArrayList<org.apromore.manager.model_toolbox.ParameterType>();
        org.apromore.manager.model_toolbox.ParameterType _mergeProcesses_payloadParametersParameterVal1 = new org.apromore.manager.model_toolbox.ParameterType();
        _mergeProcesses_payloadParametersParameterVal1.setName("Name-1455995069");
        _mergeProcesses_payloadParametersParameterVal1.setValue(0.5210803706576984);
        _mergeProcesses_payloadParametersParameter.add(_mergeProcesses_payloadParametersParameterVal1);
        _mergeProcesses_payloadParameters.getParameter().addAll(_mergeProcesses_payloadParametersParameter);
        _mergeProcesses_payload.setParameters(_mergeProcesses_payloadParameters);
        _mergeProcesses_payload.setProcessName("ProcessName-1450195970");
        _mergeProcesses_payload.setVersionName("VersionName500908273");
        _mergeProcesses_payload.setUsername("Username1290376163");
        _mergeProcesses_payload.setAlgorithm("Algorithm-133409658");
        org.apromore.manager.model_toolbox.MergeProcessesOutputMsgType _mergeProcesses__return = port.mergeProcesses(_mergeProcesses_payload);
        System.out.println("mergeProcesses.result=" + _mergeProcesses__return);


        }

        System.exit(0);
    }

}
