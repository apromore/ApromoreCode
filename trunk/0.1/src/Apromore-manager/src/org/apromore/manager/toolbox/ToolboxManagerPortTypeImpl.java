
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package org.apromore.manager.toolbox;

import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 2.2.9
 * Tue Nov 16 17:26:45 CET 2010
 * Generated source version: 2.2.9
 * 
 */

@javax.jws.WebService(
                      serviceName = "ToolboxManagerService",
                      portName = "ToolboxManager",
                      targetNamespace = "http://www.apromore.org/toolbox/service_manager",
                      wsdlLocation = "http://localhost:8080/Apromore-toolbox/services/ToolboxManager?wsdl",
                      endpointInterface = "org.apromore.manager.toolbox.ToolboxManagerPortType")
                      
public class ToolboxManagerPortTypeImpl implements ToolboxManagerPortType {

    private static final Logger LOG = Logger.getLogger(ToolboxManagerPortTypeImpl.class.getName());

    /* (non-Javadoc)
     * @see org.apromore.manager.toolbox.ToolboxManagerPortType#searchForSimilarProcesses(org.apromore.manager.model_toolbox.SearchForSimilarProcessesInputMsgType  payload )*
     */
    public org.apromore.manager.model_toolbox.SearchForSimilarProcessesOutputMsgType searchForSimilarProcesses(org.apromore.manager.model_toolbox.SearchForSimilarProcessesInputMsgType payload) { 
        LOG.info("Executing operation searchForSimilarProcesses");
        System.out.println(payload);
        try {
            org.apromore.manager.model_toolbox.SearchForSimilarProcessesOutputMsgType _return = new org.apromore.manager.model_toolbox.SearchForSimilarProcessesOutputMsgType();
            org.apromore.manager.model_toolbox.ResultType _returnResult = new org.apromore.manager.model_toolbox.ResultType();
            _returnResult.setMessage("Message576325706");
            _returnResult.setCode(Integer.valueOf(2013712239));
            _return.setResult(_returnResult);
            org.apromore.manager.model_toolbox.CanonicalsType _returnCanonicals = new org.apromore.manager.model_toolbox.CanonicalsType();
            java.util.List<org.apromore.manager.model_toolbox.CanonicalType> _returnCanonicalsCanonicalType = new java.util.ArrayList<org.apromore.manager.model_toolbox.CanonicalType>();
            org.apromore.manager.model_toolbox.CanonicalType _returnCanonicalsCanonicalTypeVal1 = new org.apromore.manager.model_toolbox.CanonicalType();
            _returnCanonicalsCanonicalTypeVal1.setProcessId(-468901939);
            _returnCanonicalsCanonicalTypeVal1.setVersionName("VersionName1024996932");
            javax.activation.DataHandler _returnCanonicalsCanonicalTypeVal1Cpf = null;
            _returnCanonicalsCanonicalTypeVal1.setCpf(_returnCanonicalsCanonicalTypeVal1Cpf);
            _returnCanonicalsCanonicalType.add(_returnCanonicalsCanonicalTypeVal1);
            _returnCanonicals.getCanonicalType().addAll(_returnCanonicalsCanonicalType);
            _return.setCanonicals(_returnCanonicals);
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see org.apromore.manager.toolbox.ToolboxManagerPortType#mergeProcesses(org.apromore.manager.model_toolbox.MergeProcessesInputMsgType  payload )*
     */
    public org.apromore.manager.model_toolbox.MergeProcessesOutputMsgType mergeProcesses(org.apromore.manager.model_toolbox.MergeProcessesInputMsgType payload) { 
        LOG.info("Executing operation mergeProcesses");
        System.out.println(payload);
        try {
            org.apromore.manager.model_toolbox.MergeProcessesOutputMsgType _return = new org.apromore.manager.model_toolbox.MergeProcessesOutputMsgType();
            org.apromore.manager.model_toolbox.ResultType _returnResult = new org.apromore.manager.model_toolbox.ResultType();
            _returnResult.setMessage("Message-1919916081");
            _returnResult.setCode(Integer.valueOf(-802972809));
            _return.setResult(_returnResult);
            org.apromore.manager.model_toolbox.ProcessSummaryType _returnProcessSummary = new org.apromore.manager.model_toolbox.ProcessSummaryType();
            java.util.List<org.apromore.manager.model_toolbox.VersionSummaryType> _returnProcessSummaryVersionSummaries = new java.util.ArrayList<org.apromore.manager.model_toolbox.VersionSummaryType>();
            org.apromore.manager.model_toolbox.VersionSummaryType _returnProcessSummaryVersionSummariesVal1 = new org.apromore.manager.model_toolbox.VersionSummaryType();
            java.util.List<org.apromore.manager.model_toolbox.AnnotationsType> _returnProcessSummaryVersionSummariesVal1Annotations = new java.util.ArrayList<org.apromore.manager.model_toolbox.AnnotationsType>();
            _returnProcessSummaryVersionSummariesVal1.getAnnotations().addAll(_returnProcessSummaryVersionSummariesVal1Annotations);
            _returnProcessSummaryVersionSummariesVal1.setRanking("Ranking-2033850061");
            _returnProcessSummaryVersionSummariesVal1.setName("Name774661720");
            _returnProcessSummaryVersionSummariesVal1.setLastUpdate("LastUpdate-259416698");
            _returnProcessSummaryVersionSummariesVal1.setCreationDate("CreationDate1505351216");
            _returnProcessSummaryVersionSummaries.add(_returnProcessSummaryVersionSummariesVal1);
            _returnProcessSummary.getVersionSummaries().addAll(_returnProcessSummaryVersionSummaries);
            _returnProcessSummary.setOriginalNativeType("OriginalNativeType1735872951");
            _returnProcessSummary.setName("Name1337846429");
            _returnProcessSummary.setId(Integer.valueOf(2007751184));
            _returnProcessSummary.setDomain("Domain1751796376");
            _returnProcessSummary.setRanking("Ranking-1524161573");
            _returnProcessSummary.setLastVersion("LastVersion1836409462");
            _returnProcessSummary.setOwner("Owner-1506686125");
            _return.setProcessSummary(_returnProcessSummary);
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

}
