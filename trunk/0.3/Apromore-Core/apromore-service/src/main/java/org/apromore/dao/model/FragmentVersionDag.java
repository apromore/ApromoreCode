package org.apromore.dao.model;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.springframework.beans.factory.annotation.Configurable;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import java.io.Serializable;

/**
 * FragmentVersionDag generated by hbm2java
 */
@Entity
@Table(name = "fragment_version_dag")
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
@Configurable("fragmentVersionDag")
public class FragmentVersionDag implements Serializable {

    /**
     * Hard coded for interoperability.
     */
    private static final long serialVersionUID = -9072539074338485548L;

    private FragmentVersionDagId id;
    private FragmentVersion fragmentVersion;


    public FragmentVersionDag() { }


    @EmbeddedId
    @AttributeOverrides({
            @AttributeOverride(name = "fragmentVersionId", column = @Column(name = "fragment_version_id", nullable = false, length = 40)),
            @AttributeOverride(name = "childFragmentVersionId", column = @Column(name = "child_fragment_version_id", nullable = false, length = 40)),
            @AttributeOverride(name = "pocketId", column = @Column(name = "pocket_id", nullable = false, length = 40))})
    public FragmentVersionDagId getId() {
        return this.id;
    }

    public void setId(final FragmentVersionDagId newId) {
        this.id = newId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "fragment_version_id", nullable = false, insertable = false, updatable = false)
    public FragmentVersion getFragmentVersion() {
        return this.fragmentVersion;
    }

    public void setFragmentVersion(final FragmentVersion newFragmentVersion) {
        this.fragmentVersion = newFragmentVersion;
    }

}
