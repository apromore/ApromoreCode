package org.apromore.dao.model;
// Generated 07/11/2011 3:11:48 PM by Hibernate Tools 3.2.4.GA


import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.springframework.beans.factory.annotation.Configurable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

/**
 * Vertices generated by hbm2java
 */
@Entity
@Table(name = "vertices")
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
@Configurable("vertices")
public class Vertices implements Serializable {

    /**
     * Hard coded for interoperability.
     */
    private static final long serialVersionUID = -5232538404638485548L;

    private String vid;
    private Contents contents;
    private String vname;
    private String vtype;
    private String locatorPreset;
    private String locatorPostset;
    private Set<Edges> edgesesForSourceVid = new HashSet<Edges>(0);
    private Set<Edges> edgesesForTargetVid = new HashSet<Edges>(0);


    public Vertices() { }


    @Id
    @Column(name = "vid", unique = true, nullable = false, length = 40)
    public String getVid() {
        return this.vid;
    }

    public void setVid(String vid) {
        this.vid = vid;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "content_id")
    public Contents getContents() {
        return this.contents;
    }

    public void setContents(Contents contents) {
        this.contents = contents;
    }


    @Column(name = "vname", length = 2000)
    public String getVname() {
        return this.vname;
    }

    public void setVname(String vname) {
        this.vname = vname;
    }


    @Column(name = "vtype", length = 100)
    public String getVtype() {
        return this.vtype;
    }

    public void setVtype(String vtype) {
        this.vtype = vtype;
    }


    @Column(name = "locator_preset", length = 2000)
    public String getLocatorPreset() {
        return this.locatorPreset;
    }

    public void setLocatorPreset(String locatorPreset) {
        this.locatorPreset = locatorPreset;
    }


    @Column(name = "locator_postset", length = 2000)
    public String getLocatorPostset() {
        return this.locatorPostset;
    }

    public void setLocatorPostset(String locatorPostset) {
        this.locatorPostset = locatorPostset;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "verticesBySourceVid")
    public Set<Edges> getEdgesesForSourceVid() {
        return this.edgesesForSourceVid;
    }

    public void setEdgesesForSourceVid(Set<Edges> edgesesForSourceVid) {
        this.edgesesForSourceVid = edgesesForSourceVid;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "verticesByTargetVid")
    public Set<Edges> getEdgesesForTargetVid() {
        return this.edgesesForTargetVid;
    }

    public void setEdgesesForTargetVid(Set<Edges> edgesesForTargetVid) {
        this.edgesesForTargetVid = edgesesForTargetVid;
    }

}


