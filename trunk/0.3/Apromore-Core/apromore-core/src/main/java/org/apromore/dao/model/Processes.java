package org.apromore.dao.model;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.springframework.beans.factory.annotation.Configurable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

/**
 * Processes generated by hbm2java
 */
@Entity
@Table(name = "processes")
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
@Configurable("processes")
public class Processes implements Serializable {

    /** Hard coded for interoperability. */
    private static final long serialVersionUID = -9072663404638485548L;

    private String processId;
    private String processName;
    private Set<ProcessBranches> processBrancheses = new HashSet<ProcessBranches>(0);


    public Processes() { }


    @Id
    @Column(name = "process_id", unique = true, nullable = false, length = 40)
    public String getProcessId() {
        return this.processId;
    }

    public void setProcessId(String processId) {
        this.processId = processId;
    }


    @Column(name = "process_name", length = 1000)
    public String getProcessName() {
        return this.processName;
    }

    public void setProcessName(String processName) {
        this.processName = processName;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "processes")
    public Set<ProcessBranches> getProcessBrancheses() {
        return this.processBrancheses;
    }

    public void setProcessBrancheses(Set<ProcessBranches> processBrancheses) {
        this.processBrancheses = processBrancheses;
    }

}


