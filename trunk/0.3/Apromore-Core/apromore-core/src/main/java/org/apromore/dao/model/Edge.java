package org.apromore.dao.model;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.springframework.beans.factory.annotation.Configurable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import java.io.Serializable;

/**
 * Edge generated by hbm2java
 */
@Entity
@Table(name = "edge")
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
@Configurable("edge")
public class Edge implements Serializable {

    /**
     * Hard coded for interoperability.
     */
    private static final long serialVersionUID = -9072531214638485548L;

    private Integer edgeId;
    private Content content;
    private Vertex verticesBySourceVid;
    private Vertex verticesByTargetVid;


    public Edge() { }


    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "edge_id", unique = true, nullable = false)
    public Integer getEdgeId() {
        return this.edgeId;
    }

    public void setEdgeId(final Integer newEdgeId) {
        this.edgeId = newEdgeId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "source_vid")
    public Vertex getVerticesBySourceVid() {
        return this.verticesBySourceVid;
    }

    public void setVerticesBySourceVid(final Vertex newVerticesBySourceVid) {
        this.verticesBySourceVid = newVerticesBySourceVid;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "content_id")
    public Content getContent() {
        return this.content;
    }

    public void setContent(final Content newContent) {
        this.content = newContent;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "target_vid")
    public Vertex getVerticesByTargetVid() {
        return this.verticesByTargetVid;
    }

    public void setVerticesByTargetVid(final Vertex newVerticesByTargetVid) {
        this.verticesByTargetVid = newVerticesByTargetVid;
    }

}


