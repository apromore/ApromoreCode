package org.apromore.portal.service_oryx;

import org.apromore.model.EditSessionType;
import org.apromore.model.ProcessSummaryType;
import org.apromore.portal.common.Constants;
import org.apromore.portal.exception.ExceptionUpdateProcess;
import org.apromore.portal.exception.ExceptionVersion;
import org.apromore.portal.manager.RequestToManager;
import org.apromore.portal.model_oryx.ReadNativeInputMsgType;
import org.apromore.portal.model_oryx.ReadNativeOutputMsgType;
import org.apromore.portal.model_oryx.ResultType;
import org.apromore.portal.model_oryx.WriteAnnotationOutputMsgType;
import org.apromore.portal.model_oryx.WriteNewAnnotationOutputMsgType;
import org.apromore.portal.model_oryx.WriteNewProcessInputMsgType;
import org.apromore.portal.model_oryx.WriteNewProcessOutputMsgType;
import org.apromore.portal.model_oryx.WriteProcessInputMsgType;
import org.apromore.portal.model_oryx.WriteProcessOutputMsgType;

import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.mail.util.ByteArrayDataSource;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Logger;

/**
 * This class was generated by Apache CXF 2.2.9
 * Tue May 03 16:04:40 CEST 2011
 * Generated source version: 2.2.9
 */
@javax.jws.WebService(
        serviceName = "PortalOryxService",
        portName = "PortalOryx",
        targetNamespace = "http://www.apromore.org/portal/service_oryx",
        wsdlLocation = "http://localhost:8080/Apromore-portal/services?wsdl",
        endpointInterface = "org.apromore.portal.service_oryx.PortalOryxPortType")
public class PortalOryxPortTypeImpl implements PortalOryxPortType {

    private static final Logger LOG = Logger.getLogger(PortalOryxPortTypeImpl.class.getName());

    public WriteNewAnnotationOutputMsgType writeNewAnnotation(org.apromore.portal.model_oryx.WriteNewAnnotationInputMsgType payload) {
        LOG.info("Executing operation writeNewAnnotation");
        System.out.println(payload);
        WriteNewAnnotationOutputMsgType res = new WriteNewAnnotationOutputMsgType();
        ResultType result = new ResultType();
        res.setResult(result);
        try {
            Integer code = payload.getEditSessionCode();
            String newAnnotationName = payload.getAnnotationName();
            DataHandler handler = payload.getNative();
            InputStream native_is = handler.getInputStream();
            RequestToManager request = new RequestToManager();
            EditSessionType editSession = request.ReadEditSession(code);
            String nat_type = editSession.getNativeType();
            Integer processId = editSession.getProcessId();
            String version = editSession.getVersionName();
            request.WriteAnnotation(code, newAnnotationName, true, processId, version, nat_type, native_is);
            request.DeleteEditionSession(code);
            EditSessionType newEditSession = new EditSessionType();
            newEditSession.setDomain(editSession.getDomain());
            newEditSession.setNativeType(editSession.getNativeType());
            newEditSession.setProcessId(editSession.getProcessId());
            newEditSession.setProcessName(editSession.getProcessName());
            newEditSession.setUsername(editSession.getUsername());
            newEditSession.setVersionName(editSession.getVersionName());
            newEditSession.setWithAnnotation(editSession.isWithAnnotation());
            newEditSession.setAnnotation(newAnnotationName);
            int newEditSessionCode = request.WriteEditSession(newEditSession);
            res.setEditSessionCode(newEditSessionCode);
            result.setCode(0);
            result.setMessage("");
        } catch (Exception ex) {
            ex.printStackTrace();
            result.setCode(-1);
            result.setMessage(ex.getMessage());
        }
        return res;
    }


    public WriteAnnotationOutputMsgType writeAnnotation(org.apromore.portal.model_oryx.WriteAnnotationInputMsgType payload) {
        LOG.info("Executing operation writeAnnotation");
        System.out.println(payload);
        WriteAnnotationOutputMsgType res = new WriteAnnotationOutputMsgType();
        ResultType result = new ResultType();
        res.setResult(result);
        try {
            Integer code = payload.getEditSessionCode();
            DataHandler handler = payload.getNative();
            InputStream native_is = handler.getInputStream();
            RequestToManager request = new RequestToManager();
            // request details associated with edit session
            EditSessionType editSession = request.ReadEditSession(code);
            String nat_type = editSession.getNativeType();
            Integer processId = editSession.getProcessId();
            String version = editSession.getVersionName();
            String annotationName = editSession.getAnnotation();
            request.WriteAnnotation(code, annotationName, false, processId, version, nat_type, native_is);
            result.setCode(0);
            result.setMessage("");
        } catch (Exception ex) {
            ex.printStackTrace();
            result.setCode(-1);
            result.setMessage(ex.getMessage());
        }
        return res;
    }

    /* (non-Javadoc)
      * @see org.apromore.portal.service_oryx.PortalOryxPortType#writeProcess(org.apromore.portal.model_oryx.WriteProcessInputMsgType  payload )*
      */
    public WriteProcessOutputMsgType writeProcess(WriteProcessInputMsgType payload) {
        LOG.info("Executing operation writeProcess");
        System.out.println(payload);
        WriteProcessOutputMsgType res = new WriteProcessOutputMsgType();
        ResultType result = new ResultType();
        res.setResult(result);
        try {
            DataHandler handler = payload.getNative();
            InputStream native_is = handler.getInputStream();
            int code = payload.getEditSessionCode();
            // request details associated with edit session
            org.apromore.portal.model_oryx.EditSessionType editSession = payload.getEditSession();
            int processId = editSession.getProcessId();
            String username = editSession.getUsername();
            String nativeType = editSession.getNativeType();
            String domain = editSession.getDomain();
            String processName = editSession.getProcessName();
            String new_versionName = editSession.getVersionName();
            String created = editSession.getCreationDate();
            String lastupdate = editSession.getLastUpdate();
            String documentation = "";
            String preVersion = payload.getPreVersion();
            // update process: create new version whose meta data are in editSession
            RequestToManager request = new RequestToManager();
            request.UpdateProcess(code, username, nativeType, processId, domain, processName, new_versionName, preVersion, native_is);
            result.setCode(0);
            result.setMessage("");
        } catch (ExceptionVersion ex) {
            result.setCode(-3);
            result.setMessage(ex.getMessage());
        } catch (IOException ex) {
            result.setCode(-1);
            result.setMessage(ex.getMessage());
        } catch (ExceptionUpdateProcess ex) {
            result.setCode(-1);
            result.setMessage(ex.getMessage());
        }
        return res;
    }

    /* (non-Javadoc)
      * @see org.apromore.portal.service_oryx.PortalOryxPortType#writeNewProcess(org.apromore.portal.model_oryx.WriteNewProcessInputMsgType  payload )*
      */
    public WriteNewProcessOutputMsgType writeNewProcess(WriteNewProcessInputMsgType payload) {
        LOG.info("Executing operation writeNewProcess");
        System.out.println(payload);
        WriteNewProcessOutputMsgType res = new WriteNewProcessOutputMsgType();
        ResultType result = new ResultType();
        res.setResult(result);
        int code = payload.getEditSessionCode();

        try {
            DataHandler handler = payload.getNative();
            InputStream native_is = handler.getInputStream();

            org.apromore.portal.model_oryx.EditSessionType editSession = payload.getEditSession();
            // editSession given by Oryx contains all meta data
            String username = editSession.getUsername();
            String nativeType = editSession.getNativeType();
            String domain = editSession.getDomain();
            String new_processName = editSession.getProcessName();
            String new_versionName = editSession.getVersionName();
            String created = editSession.getCreationDate();
            String lastupdate = editSession.getLastUpdate();
            String documentation = "";
            // import native for corresponding process version, fakeEvents is false
            RequestToManager request = new RequestToManager();
            ProcessSummaryType newProcess = request.importProcess(username, nativeType, new_processName, new_versionName, native_is,
                    domain, documentation, created, lastupdate, false);
            // delete edit session
            request.DeleteEditionSession(code);
            // request a new session code for the new process and return it to Oryx
            EditSessionType newEditSession = new EditSessionType();
            newEditSession.setDomain(newProcess.getDomain());
            newEditSession.setNativeType(newProcess.getOriginalNativeType());
            newEditSession.setProcessId(newProcess.getId());
            newEditSession.setProcessName(newProcess.getName());
            newEditSession.setUsername(newProcess.getOwner());
            newEditSession.setVersionName(newProcess.getLastVersion());
            newEditSession.setWithAnnotation(true);
            newEditSession.setAnnotation(Constants.INITIAL_ANNOTATION);
            int newEditSessionCode = request.WriteEditSession(newEditSession);
            res.setEditSessionCode(newEditSessionCode);

            result.setCode(0);
            result.setMessage("");
        } catch (Exception ex) {
            ex.printStackTrace();
            result.setCode(-1);
            result.setMessage(ex.getMessage());
        }
        return res;
    }

    /* (non-Javadoc)
      * @see org.apromore.portal.service_oryx.PortalOryxPortType#readNative(org.apromore.portal.model_oryx.ReadNativeInputMsgType  payload )*
      */
    public ReadNativeOutputMsgType readNative(ReadNativeInputMsgType payload) {
        LOG.info("Executing operation readNative");
        System.out.println(payload);
        ReadNativeOutputMsgType res = new ReadNativeOutputMsgType();
        ResultType result = new ResultType();
        res.setResult(result);
        int code = payload.getEditSessionCode();

        try {
            // request the edit session identified by code
            RequestToManager request = new RequestToManager();
            EditSessionType editSessionP = request.ReadEditSession(code);
            int processId = editSessionP.getProcessId();
            String version = editSessionP.getVersionName();
            String nativeType = editSessionP.getNativeType();
            String processName = editSessionP.getProcessName();
            Boolean withAnnotation = editSessionP.isWithAnnotation();
            String annotation = editSessionP.getAnnotation();
            String owner = editSessionP.getUsername();
            String domain = editSessionP.getDomain();
            String creationDate = editSessionP.getCreationDate();
            String lastUpdate = editSessionP.getLastUpdate();
            // request native to be exported in format nativeType
            InputStream native_is =
                    request.ExportFormat(processId, processName, version, nativeType, annotation, withAnnotation, owner);

            DataSource sourceNative = new ByteArrayDataSource(native_is, "text/xml");
            res.setNative(new DataHandler(sourceNative));
            org.apromore.portal.model_oryx.EditSessionType editSessionO
                    = new org.apromore.portal.model_oryx.EditSessionType();
            res.setEditSession(editSessionO);
            editSessionO.setAnnotation(annotation);
            editSessionO.setCreationDate(creationDate);
            editSessionO.setDomain(domain);
            editSessionO.setLastUpdate(lastUpdate);
            editSessionO.setNativeType(nativeType);
            editSessionO.setProcessId(processId);
            editSessionO.setProcessName(processName);
            editSessionO.setUsername(owner);
            editSessionO.setVersionName(version);
            editSessionO.setWithAnnotation(withAnnotation);

            result.setCode(0);
            result.setMessage("");
        } catch (Exception ex) {
            ex.printStackTrace();
            result.setCode(-1);
            result.setMessage(ex.getMessage());
        }
        return res;
    }

}
