<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN" "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--
  Checkstyle configuration that checks the sun coding conventions from:
    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html
    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/
    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html
    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html
    - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).
  Most Checks are configurable, be sure to consult the documentation.
  To completely disable a check, just comment it out or delete it from the file.
  Finally, it is worth reading the documentation.
-->

<module name="Checker">
    <!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        http://checkstyle.sourceforge.net/5.x/config.html#Checker

        <property name="basedir" value="${basedir}"/>
    -->

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module name="Translation"/>
    
    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name="FileLength"/>
    
    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module name="FileTabCharacter"/>

    <!-- Miscellaneous other checks.                   -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module name="RegexpSingleline">
       <property name="format" value="\s+$"/>
       <property name="minimum" value="0"/>
       <property name="maximum" value="0"/>
       <property name="message" value="Line has trailing spaces."/>
    </module>

    <module name="TreeWalker">
        <property name="cacheFile" value="target/checkstyle-cachefile"/>
        <property name="tabWidth" value="4"/>

        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <module name="JavadocMethod">
            <property name="scope" value="protected" />
            <property name="allowUndeclaredRTE" value="true" />
            <property name="allowThrowsTagsForSubclasses" value="true" />
        </module>
        <module name="JavadocType" >
            <property name="scope" value="protected" />
            <property name="authorFormat" value="&lt;a href=&quot;mailto:.*@.*&quot;&gt;.*&lt;/a&gt;" />
        </module>
        <module name="JavadocVariable">
            <property name="scope" value="protected" />
        </module>
        <module name="JavadocStyle">
            <property name="scope" value="protected" />
        </module>


        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="ConstantName">
            <property name="format" value="^[A-Z]([A-Z0-9_]*[A-Z0-9])?$" />
        </module>
        <module name="MemberName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
        </module>
        <module name="StaticVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
        </module>
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
        </module>
        <module name="MethodName"/>
        <module name="PackageName"/>
        <module name="TypeName"/>


        <!--&lt;!&ndash; Checks for Headers                                &ndash;&gt;-->
        <!--&lt;!&ndash; See http://checkstyle.sf.net/config_header.html   &ndash;&gt;-->
        <!--<module name="Header">-->
            <!--<property name="headerFile" value="${basedir}/checkstyle-header.txt"/>-->
        <!--</module>-->

        <!--&lt;!&ndash; Following interprets the header file as regular expressions. &ndash;&gt;-->
        <!--<module name="RegexpHeader"/>-->


        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="AvoidStarImport"/>
        <module name="IllegalImport"/>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>
        <module name="ImportOrder" >
            <property name="groups" value="java,javax" />
            <property name="ordered" value="false" />
        </module>


        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="ExecutableStatementCount"/>
        <module name="ParameterNumber"/>
        <module name="LineLength">
            <property name="max" value="140"/>
            <property name="ignorePattern" value="^\s*\*\s*[^\s]+.+$|^\\s*(@.+)$"/>
        </module>
        <module name="MethodLength">
            <property name="max" value="150"/>
            <property name="tokens" value="METHOD_DEF"/>
            <property name="countEmpty" value="false"/>
        </module>


        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForIteratorPad" >
            <property name="option" value="space" />
        </module>
        <module name="NoWhitespaceAfter" >
            <property name="tokens" value="BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS" />
            <property name="allowLineBreaks" value="false" />
        </module>
        <module name="NoWhitespaceBefore" >
            <property name="allowLineBreaks" value="false" />
        </module>
        <module name="OperatorWrap" >
            <property name="option" value="eol" />
            <property name="tokens" value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR" />
        </module>
        <module name="OperatorWrap" >
            <property name="option" value="nl" />
            <property name="tokens" value="COLON" />
        </module>
        <module name="ParenPad" />
        <module name="TypecastParenPad" />
        <module name="WhitespaceAfter" />
        <module name="WhitespaceAround" />
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>


        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>


        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="EmptyBlock">
            <property name="option" value="text"/>
        </module>
        <module name="NeedBraces"/>
        <module name="AvoidNestedBlocks"/>
        <module name="LeftCurly"/>
        <module name="RightCurly"/>


        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <module name="AvoidInlineConditionals">
            <property name="severity" value="ignore"/>
        </module>
        <module name="DoubleCheckedLocking"/>
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="EqualsAvoidNull"/>
        <module name="HiddenField"/>
        <module name="IllegalInstantiation">
            <property name="classes" value="java.lang.Boolean"/>
        </module>
        <module name="InnerAssignment"/>
        <module name="MagicNumber">
            <property name="ignoreHashCodeMethod" value="true" />
            <property name="ignoreAnnotation" value="true" />
        </module>
        <module name="MissingSwitchDefault"/>
        <module name="RedundantThrows">
            <property name="allowSubclasses" value="true"/>
            <property name="allowUnchecked" value="true"/>
        </module>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality" />
        <module name="NestedIfDepth" >
            <property name="max" value="2" />
        </module>
        <module name="NestedTryDepth" >
            <property name="max" value="2" />
        </module>
        <module name="SuperClone" />
        <module name="SuperFinalize" />
        <module name="PackageDeclaration" />
        <module name="JUnitTestCase" />
        <module name="ReturnCount" >
          <property name="max" value="4" />
        </module>
        <module name="IllegalType" />
        <module name="ParameterAssignment" />

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <module name="VisibilityModifier">
            <property name="protectedAllowed" value="true"/>
        </module>
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InterfaceIsType"/>
        <module name="MutableException"/>
        <!--<module name="DesignForExtension">-->
            <!--<property name="severity" value="info"/>-->
        <!--</module>-->
        <module name="ThrowsCount">
            <property name="max" value="4"/>
        </module>

        <!-- Complexity checks -->
        <module name="CyclomaticComplexity" >
            <property name="max" value="8" />
        </module>
        <module name="NPathComplexity"/>
        <module name="JavaNCSS">
            <!-- Identical to MethodLength. -->
            <property name="methodMaximum" value="40"/>
            <!--
              We assume a file length (FileLength) of 1500. Assuming that at
              least 500 lines are for comments and we allow only one top-level
              class per file, this number for NCSS seams reasonable.
            -->
            <property name="classMaximum" value="1000"/>
            <!--
              We assume a file length (FileLength) of 1500.
            -->
            <property name="fileMaximum" value="1500"/>
        </module>


        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <module name="FinalParameters"/>
        <module name="TodoComment"/>
        <module name="UpperEll"/>

    </module>

</module>
